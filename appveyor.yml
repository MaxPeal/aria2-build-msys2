version: 1.34.0-{build}

# use http://yaml-online-parser.appspot.com/ for syntax checking

environment:
    global:
      APPVEYOR_SAVE_CACHE_ON_ERROR: true
      CI_CACHE: C:\ci_cache
      CI_CACHE_UNIX: /c/ci_cache
      DOXYGEN_INST_DIR: '%CI_CACHE%\doxygen'
      DOXYGEN_INST_DIR_UNIX: '%CI_CACHE_UNIX%/doxygen'
      CYG_CACHE: '%CI_CACHE%\cygwin'
      CYG_CACHE_UNIX: '%CI_CACHE_UNIX%/cygwin'
      TAR_CACHE: '%CI_CACHE%\tar'
      TAR_CACHE_UNIX: '%CI_CACHE_UNIX%/tar'
      CCACHE_CACHE: '%CI_CACHE%\ccache'
      CCACHE_CACHE_UNIX: '%CI_CACHE_UNIX%/ccache'
      #add CCACHE_DIR as unix format
      CCACHE_DIR: '%CCACHE_CACHE_UNIX%'
      MSYS2_CACHE: '%CI_CACHE%\msys2'
      MSYS2_CACHE_UNIX: '%CI_CACHE_UNIX%/msys2'
      CHOCO_CACHE: '%CI_CACHE%\choco'
      CHOCO_CACHE_UNIX: '%CI_CACHE_UNIX%/choco'
      WLK_INST_CACHE: '%CI_CACHE%\wlk_inst'
      WLK_INST_CACHE_UNIX: '%CI_CACHE_UNIX%/wlk_inst'
# syntax see also https://github.com/dokan-dev/dokany/blob/cfe28787a67d3b6f13843e43b1bb462c9882181b/appveyor.yml

# use an image with recent Mingw-w64 versions available on both architectures: https://www.appveyor.com/docs/windows-images-software/#mingw-msys-cygwin
image: Visual Studio 2015

matrix:
  # We always want 32-bit and 64-bit compilation
  fast_finish: false
  
platform:
  - x86
  - x64
  
# when multiple CI builds are queued, the tested commit needs to be in the last X commits cloned with "--depth X"
clone_depth: 10

skip_tags: true

cache:
  ###- C:\msys64\var\cache\pacman\pkg -> appveyor.yml, build-aria2.sh
  ###- C:\msys64\var\cache\pacman\pkg -> build-aria2.sh
  ###- expat-*.tar.bz2 -> build-aria2.sh
- C:\msys64\home\appveyor\.ccache -> FOOappveyor.yml
- C:\msys64\var\cache -> FOOappveyor.yml
- C:\MinGW\var\cache\mingw-get\packages -> FOOappveyor.yml
- C:\msys64\var\cache\pacman\pkg -> FOOappveyor.yml
- '%CI_CACHE% -> FOOappveyor.yml'
#- expat-*.tar.bz2
#- sqlite-autoconf-*.tar.gz
#- c-ares-*.tar.gz
#- libssh2-*.tar.gz


init:
- ps: IF ($env:APPVEYOR_REPO_BRANCH =! "develop") {$env:APPVEYOR_SAVE_CACHE_ON_ERROR = "true"}
### RDP DEBUG - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
#- cmd: >-
####- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -Syyuu --noconfirm --cache %MSYS2_CACHE_UNIX% --ask=20"
####    output: + pacman -Syyuu --noconfirm --cache /c/ci_cache/msys2 --ask=20
####- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -Syyuu --noconfirm --cache "%MSYS2_CACHE_UNIX%" --ask=20"
####    output: + pacman -Syyuu --noconfirm --cache /c/ci_cache/msys2 --ask=20
####- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -Syyuu --noconfirm --cache '%MSYS2_CACHE_UNIX%' --ask=20"
####    output: + pacman -Syyuu --noconfirm --cache /c/ci_cache/msys2 --ask=20


- ps: |
        New-Item -ItemType Directory -Force -Path ${env:CI_CACHE} | Out-Null

- ps: |
        function Exec-External {
          param(
            [Parameter(Position=0,Mandatory=1)][scriptblock] $command
          )
          & $command
          if ($LASTEXITCODE -ne 0) {
            throw ("Command returned non-zero error-code ${LASTEXITCODE}: $command")
          }
        }

- ps: |
          function downloadIfOlderThanDays($url, $path, $days) {
            if ( !(Test-Path $path -NewerThan (Get-Date).AddDays(-$days)) ) {
              Write-Host "$path does not exist or is older than $days days, downloading from $url"
              Invoke-WebRequest $url -OutFile $path
            }
          }
          downloadIfOlderThanDays "https://cygwin.com/setup-x86_64.exe" "${env:CI_CACHE}\setup-x86_64.exe" 7
          function updateCygwin($cygwinexe, $installFolder, $cacheFolder) {
            Write-Host "Update Cygwin: $cygwinexe"
            Exec-External {& cmd /c $cygwinexe -gqnNdO -R $installFolder -s http://mirrors.kernel.org/sourceware/cygwin/ -l $cacheFolder -P cmake -P make -P gcc-core -P gcc-g++ -P pkg-config -P cygwin32-gcc-core -P cygwin32-gcc-g++}
            Write-Host "Update Cygwin: $cygwinexe " -NoNewLine
            Write-Host "[ OK ]" -ForegroundColor Green
          }
          updateCygwin "${env:CI_CACHE}\setup-x86_64.exe" C:/cygwin64 $env:CYG_CACHE

- ps: |
        function bash($bash_command) {
            Write-Host "MSYS2-Bash: $bash_command"
            Exec-External {& C:\msys64\usr\bin\bash.exe --login -c $bash_command }
            Write-Host "MSYS2-Bash $bash_command " -NoNewLine
            Write-Host "[ OK ]" -ForegroundColor Green
          }

          New-Item -Force -Type Directory $env:TAR_CACHE
          $unix_tar_cache = (Exec-External {& C:\msys64\usr\bin\bash.exe --login -c "cygpath '${env:TAR_CACHE}'"})

          New-Item -Force -Type Directory $env:CCACHE_CACHE
          $unix_ccache_cache = (Exec-External {& C:\msys64\usr\bin\bash.exe --login -c "cygpath '${env:CCACHE_CACHE}'"})
          
          New-Item -Force -Type Directory $env:MSYS2_CACHE
          $unix_msys2_cache = (Exec-External {& C:\msys64\usr\bin\bash.exe --login -c "cygpath '${env:MSYS2_CACHE}'"})
          # We run the upgrade three times, because MSYS2 cannot upgrade itself without restarting
          # TODO: detect if restart is necessary and only run as many times as needed.
          #       Maybe two times is enough in all cases, but better be safe than sorry and run it three times.
          # See https://github.com/msys2/msys2/wiki/MSYS2-installation#iii-updating-packages
          # For the `--ask 20` option, see
          # <https://github.com/Alexpux/MSYS2-packages/issues/1141>.
          #
          # Otherwise the message
          #
          #     :: msys2-runtime and catgets are in conflict. Remove catgets? [y/N]
          #
          # is displayed when trying to update followed by an exit rather
          # than selecting yes.
          for ($i = 0; $i -lt 3; $i++) {
            bash "pacman -Syuu --ask 20 --noconfirm --cache `"$unix_msys2_cache`""
          }
          # install MinGW toolchain
          bash "pacman --sync --needed --noconfirm --cache `"$unix_msys2_cache`" mingw-w64-{x86_64,i686}-toolchain mingw-w64-{x86_64,i686}-cmake"
          bash "pacman --sync --needed --noconfirm --cache `"$unix_msys2_cache`" mingw-w64-{x86_64,i686}-ccache"
  # use the newest versions documented here: https://www.appveyor.com/docs/windows-images-software/#mingw-msys-cygwin
- cmd: IF "%PLATFORM%" == "x86" SET PATH=C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin;%PATH%
- cmd: IF "%PLATFORM%" == "x64" SET PATH=C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin;%PATH%
- ps: >-
    $gitData = ConvertFrom-StringData (git log -1 --format=format:"commitId=%H%nmessage=%s%ncommitted=%aD" | out-string)

    if ($gitData['message'] -eq "") { $gitData['message'] = "No commit message available for $($gitData['commitid'])" }

    # View the data with Write-Output @gitData

    Update-AppveyorBuild @gitData

build_script:
###- cmd: >-
###    C:\msys64\usr\bin\pacman "-Syyuu --noconfirm --cache %unix_msys2_cache% --ask=20"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -Syyuu --noconfirm --cache %MSYS2_CACHE_UNIX% --ask=20"

    ###C:\msys64\usr\bin\pacman "-Suu --noconfirm --cache %unix_msys2_cache% --ask=20"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -Suu --noconfirm --cache %MSYS2_CACHE_UNIX% --ask=20"

    #C:\msys64\usr\bin\pacman "-S --noconfirm  --cache %unix_msys2_cache% --needed --ask=20 base-devel zlib-devel sqlite git unzip zip tar gmp gmp-devel libssh2 libssh2-devel openssl-devel"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -S --noconfirm  --cache %MSYS2_CACHE_UNIX% --needed --ask=20 base-devel zlib-devel sqlite git unzip zip tar gmp gmp-devel libssh2 libssh2-devel openssl-devel"

    #REM C:\msys64\usr\bin\pacman -S --noconfirm --ask=20 sqlite expat gmp c-ares winpthreads libssh2
    #C:\msys64\usr\bin\pacman "-S --noconfirm  --cache %unix_msys2_cache% --ask=20 sqlite expat gmp libssh2 ccache"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -S --noconfirm  --cache %MSYS2_CACHE_UNIX% --ask=20 sqlite expat gmp libssh2 ccache"
    
    #REM C:\msys64\usr\bin\pacman -S --noconfirm --ask=20 sqlite-devel expat-devel gmp-devel c-ares-devel winpthreads-devel libssh2-devel
    #C:\msys64\usr\bin\pacman "-S --noconfirm  --cache %unix_msys2_cache% --ask=20 sqlite-devel expat-devel gmp-devel libssh2-devel"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -S --noconfirm  --cache %MSYS2_CACHE_UNIX% --ask=20 sqlite-devel expat-devel gmp-devel libssh2-devel"
    
    #REM C:\msys64\usr\bin\pacman -S --noconfirm --ask=20 mingw-w64-x86_64-sqlite mingw-w64-x86_64-expat mingw-w64-x86_64-gmp mingw-w64-x86_64-c-ares mingw-w64-x86_64-winpthreads mingw-w64-x86_64-libssh2
    #C:\msys64\usr\bin\pacman "-S --noconfirm  --cache %unix_msys2_cache% --ask=20 mingw-w64-x86_64-sqlite mingw-w64-x86_64-expat mingw-w64-x86_64-gmp mingw-w64-x86_64-libssh2"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -S --noconfirm  --cache %MSYS2_CACHE_UNIX% --ask=20 mingw-w64-x86_64-sqlite mingw-w64-x86_64-expat mingw-w64-x86_64-gmp mingw-w64-x86_64-libssh2"
    
    #REM C:\msys64\usr\bin\pacman -S --noconfirm --ask=20 mingw-w64-i686-sqlite mingw-w64-i686-expat mingw-w64-i686-gmp mingw-w64-i686-c-ares mingw-w64-i686-winpthreads mingw-w64-i686-libssh2
    #REM C:\msys64\usr\bin\pacman "-S --noconfirm  --cache %unix_msys2_cache% --ask=20 mingw-w64-i686-sqlite mingw-w64-i686-expat mingw-w64-i686-gmp mingw-w64-i686-libssh2"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && pacman -S --noconfirm  --cache %MSYS2_CACHE_UNIX% --ask=20 mingw-w64-i686-sqlite mingw-w64-i686-expat mingw-w64-i686-gmp mingw-w64-i686-libssh2"
    #REM C:\msys64\usr\bin\bash -lc "cd \"$APPVEYOR_BUILD_FOLDER\" && exec ccache -s -p"

    #REM :::#set MSYSTEM=MINGW64
- cmd: IF "%PLATFORM%" == "x64" set MSYSTEM=MINGW64

    #REM C:\msys64\usr\bin\bash -lc "cd \"$APPVEYOR_BUILD_FOLDER\" && exec ./build-aria2.sh"
- cmd:     C:\msys64\usr\bin\bash.exe --login -c "set -vx && cd \"$APPVEYOR_BUILD_FOLDER\" && exec ./build-aria2.sh"

    #REM C:\msys64\usr\bin\bash -lc "cd \"$APPVEYOR_BUILD_FOLDER\" && exec ccache -s -p"
- cmd:    7z a aria2c.7z .\aria2\src\aria2c.exe

- cmd:    appveyor PushArtifact aria2c.7z

    #REM rd /s /q aria2
- cmd:    ren aria2 aria2-x64

    #REM ::::#set MSYSTEM=MINGW32
- cmd:    IF "%PLATFORM%" == "x86" set MSYSTEM=MINGW32

    C:\msys64\usr\bin\bash -lc "cd \"$APPVEYOR_BUILD_FOLDER\" && exec ./build-aria2.sh"

    REM C:\msys64\usr\bin\bash -lc "cd \"$APPVEYOR_BUILD_FOLDER\" && exec ccache -s -p"
- cmd:    7z a aria2c_x86.7z .\aria2\src\aria2c.exe

- cmd:    appveyor PushArtifact aria2c_x86.7z
test: off
skip_commits:
  files:
    - 'LICENSE'
    - '*.md'
    - '.gitingore'
on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
